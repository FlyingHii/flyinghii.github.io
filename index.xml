<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ethan Vo</title><link>https://flyinghii.github.io/</link><description>Recent content on Ethan Vo</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://flyinghii.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Project: Cashback Fintech System</title><link>https://flyinghii.github.io/projects/cashback_fintech_system_may_2024_jun_2024/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://flyinghii.github.io/projects/cashback_fintech_system_may_2024_jun_2024/</guid><description>&lt;strong>Technologies:&lt;/strong>
&lt;img alt="logo" class="inline" src="https://cdn.simpleicons.org/go"/> Gin-gonic (Golang),
&lt;img alt="logo" class="inline" src="https://cdn.simpleicons.org/react"/> Reactjs,
&lt;img alt="logo" class="inline" src="https://cdn.simpleicons.org/mongodb"/> MongoDB,
&lt;img alt="logo" class="inline" src="https://cdn.simpleicons.org/docker"/> Docker

&lt;p>
This is what I build from scratch, picking up every pieces of the tech stack. The main point is create a very lightweight demo.

Golang is used for its low memory footprint natural. Reactjs is blaze fast if SEO is not matter. I use mongoDB because of is flexible. This is a demo &amp; I want is can be flexible as much as it can.

Finally, I choose docker to fit with my company's system which is use GCP at the first place.
&lt;/p></description></item></channel></rss>